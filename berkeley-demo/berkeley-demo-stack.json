{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Berkeley Demo AWS CloudFormation template",

  "Parameters" : {


    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "InstanceID" : {
      "Description" : "Instance ID for all boxes (currently it's hardcoded for the us-west-1 region)",
      "Type" : "String",
      "Default" : "ami-4b6f650e",
      "AllowedValues" : [ "ami-4b6f650e"]
    },

    "CMDInstanceID" : {
      "Description" : "hardcoded for the us-west-1 region",
      "Type" : "String",
      "Default" : "ami-1d2b2958",
      "AllowedValues" : [ "ami-1d2b2958"]
    },

    "CMDInstanceType" : {
      "Description" : "Command/NAT server instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge",
        "m2.xlarge", "m2.2xlarge", "m2.4xlarge",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge"]
    ,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "CLIInstanceType" : {
      "Description" : "Device emulation client instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge",
        "m2.xlarge", "m2.2xlarge", "m2.4xlarge",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge"]
    ,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SRVInstanceType" : {
      "Description" : "Connection server instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge",
        "m2.xlarge", "m2.2xlarge", "m2.4xlarge",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge"]
    ,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "KFKInstanceType" : {
      "Description" : "Kafka node instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge",
        "m2.xlarge", "m2.2xlarge", "m2.4xlarge",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge"]
    ,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "CASInstanceType" : {
      "Description" : "Cassandra node instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge",
        "m2.xlarge", "m2.2xlarge", "m2.4xlarge",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge"]
    ,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SPAInstanceType" : {
      "Description" : "Spark node instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge",
        "m2.xlarge", "m2.2xlarge", "m2.4xlarge",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge"]
    ,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    }

  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "MainSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.0.0/24",
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "InternetGatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "MainRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "MainRoute1" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "MainRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "SubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "MainSubnet" },
        "RouteTableId" : { "Ref" : "MainRouteTable" }
      }
    },

    "MainSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Enable SSH access via port 22 and website access via 8080",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}},
          { "IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
          { "IpProtocol" : "-1", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : "10.0.0.0/16"}
        ]
      }
    },

    "CMDInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : {"Ref" : "CMDInstanceID"},
        "SecurityGroupIds" : [{"Ref" : "MainSecurityGroup"}],
        "SubnetId" : {"Ref" : "MainSubnet"},
        "KeyName" : {"Ref" : "KeyName"},
        "InstanceType" : {"Ref": "CMDInstanceType"},
        "PrivateIpAddress" : "10.0.0.10",
        "SourceDestCheck" : false,
        "Tags": [
          { "Key": "Application", "Value": {"Ref": "AWS::StackId"} },
          { "Key": "Name", "Value" : "cmd-instance" }
        ]
      }

    },

    "CMDEip" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "InstanceId" : { "Ref" : "CMDInstance"}
      }
    },

    "PrivateSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.10.0/24",
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "PrivateRoute1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "CMDInstance" }
      }
    },

    "SubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "PrivateSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : "10.0.0.0/24" },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1",  "CidrIp" : "10.0.0.0/24" }
        ]
      }
    },

    "CLIInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : {"Ref" : "InstanceID"},
        "SecurityGroupIds" : [{"Ref" : "PrivateSecurityGroup"}],
        "SubnetId" : {"Ref" : "PrivateSubnet"},
        "KeyName" : {"Ref" : "KeyName"},
        "InstanceType" : {"Ref": "CLIInstanceType"},
        "PrivateIpAddress" : "10.0.10.10",
        "Tags": [
          { "Key": "Application", "Value": {"Ref": "AWS::StackId"} },
          { "Key": "Name", "Value" : "device-emulator-client-instance" }
        ]
      }
    },

    "SRVInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : {"Ref" : "InstanceID"},
        "SecurityGroupIds" : [{"Ref" : "PrivateSecurityGroup"}],
        "SubnetId" : {"Ref" : "PrivateSubnet"},
        "KeyName" : {"Ref" : "KeyName"},
        "InstanceType" : {"Ref": "SRVInstanceType"},
        "PrivateIpAddress" : "10.0.10.20",
        "Tags": [
          { "Key": "Application", "Value": {"Ref": "AWS::StackId"} },
          { "Key": "Name", "Value" : "device-connection-server-instance" }
        ]
      }
    },

    "KFKInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : {"Ref" : "InstanceID"},
        "SecurityGroupIds" : [{"Ref" : "PrivateSecurityGroup"}],
        "SubnetId" : {"Ref" : "PrivateSubnet"},
        "KeyName" : {"Ref" : "KeyName"},
        "InstanceType" : {"Ref": "KFKInstanceType"},
        "PrivateIpAddress" : "10.0.10.30",
        "Tags": [
          { "Key": "Application", "Value": {"Ref": "AWS::StackId"} },
          { "Key": "Name", "Value" : "kafka-node-instance" }
        ]
      }
    },

    "CASInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : {"Ref" : "InstanceID"},
        "SecurityGroupIds" : [{"Ref" : "PrivateSecurityGroup"}],
        "SubnetId" : {"Ref" : "PrivateSubnet"},
        "KeyName" : {"Ref" : "KeyName"},
        "InstanceType" : {"Ref": "CASInstanceType"},
        "PrivateIpAddress" : "10.0.10.40",
        "Tags": [
          { "Key": "Application", "Value": {"Ref": "AWS::StackId"} },
          { "Key": "Name", "Value" : "cassandra-node-instance" }
        ]
      }
    },

    "SPAInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : {"Ref" : "InstanceID"},
        "SecurityGroupIds" : [{"Ref" : "PrivateSecurityGroup"}],
        "SubnetId" : {"Ref" : "PrivateSubnet"},
        "KeyName" : {"Ref" : "KeyName"},
        "InstanceType" : {"Ref": "SPAInstanceType"},
        "PrivateIpAddress" : "10.0.10.50",
        "Tags": [
          { "Key": "Application", "Value": {"Ref": "AWS::StackId"} },
          { "Key": "Name", "Value" : "spark-node-instance" }
        ]
      }
    }

  },

  "Outputs" : {
    "CMDInstanceEIP" : {
      "Value" : { "Ref" : "CMDEip" },
      "Description" : "Created Command Server EIP"
    }
  }

}